#include <stdio.h>
#include <stdlib.h>
#include <string.h>


#define MAX_DRIVER_SIZE 50
#define MAX_SEASON_SIZE 50
#define MAX_RACES 50


typedef struct driver{
    char firstName[10];
    char lastName[10]; 
    int points; 
    char number[3];
    char team[10];
    int age; 
} driver_t; 

typedef struct {
    driver_t driverList[MAX_DRIVER_SIZE]; 
    int number_of_drivers; 
} driverList;

typedef struct race{
    char date[11];
    char location[30];
    char raceNumber[10];
    int numberOfLaps; 
    char P1[10];
    char P2[10];
    char P3[10]; 

} race_t; 

typedef struct {
    race_t racesList[MAX_SEASON_SIZE]; 
    int number_of_races; 
}   racesList;



void printMenu(racesList *list);
void displayAllResults(int number_of_races, race_t *races);


/************
This function prints the user menu (Alexia)
inputs: none 
outputs: none
*************/ 

void printMenu(racesList *list){
    printf("Welcome to the F1 race results finder\n");
    printf("=======================================\n");
    printf("1. Display all race results\n");
    printf("2. Add race results\n");
    printf("3. Remove race results\n");
    printf("4. Save race results to database\n");
    printf("5. Display all drivers and their results\n");
    printf("6. Calculate World Champion\n");
    printf("7. Display all teams and their results\n");
    printf("8. Calculate Constructors' Champion\n");
    printf("9. Exit\n");
    printf("=======================================\n");
    printf("Please enter your choice (1-9): ");

    int choice;
    scanf("%d", &choice);

    switch(choice) {
        case 1:
            displayAllResults(list->number_of_races, list->racesList);
            break;
        case 2:
            printf("choice 1");
            break;
        case 3:
            printf("choice 1");
            break;
        case 4:
            printf("choice 1");
            break;
        case 5:
            printf("choice 1");
            break;
        case 6:
            printf("choice 1");
            break;
        case 7:
            printf("choice 1");
            break;
        case 8:
            printf("choice 1");
            break;
        case 9:
            exit(0);
        default:
            printf("Invalid choice. Please enter a number between 1 and 9.\n");
            break;
    }
}

/************
This function gets the total list of races (Ji Hyun)
inputs: from data  
outputs: list of all races over the period  
*************/ 

void displayAllResults(int number_of_races, race_t *races){
    printf("All Race Results:\n");
    FILE *file = fopen("f1driver.txt", "rb");
    if (file == NULL) {
        printf("Error: Unable to open file.\n");
        return;
    }
    driver_t racelist[MAX_RACES];
    fread(racelist, sizeof(driver_t), number_of_races, file);
    fclose(file);
    printf("%-10s %-10s %-10s %-10s %-10s\n", "Firstname", "Lastname", "Points", "Number", "Team");
    for (int i = 0; i < number_of_races; i++) {
        printf("%-10s %-10s %-10d %-10d %-10s\n", racelist[i].firstName, racelist[i].lastName, racelist[i].points, racelist[i].number, racelist[i].team);
    }
}


/************
This function adds to the total list of races (Darren)
inputs: race structs from user   
outputs: none   
*************/ 

void addRaceResults(racesList *list){

}

/************
This function removes the last race from total list of races (Aiden)
inputs: race structs from user   
outputs: none   
*************/ 

void removeRaceResults(racesList *list){

}


/************
This function saves the race results to the database (Alexia)
inputs: race list from user   
outputs: none   
*************/ 

void saveRaceResultstoDatabase(racesList *list, const char *filename){

}



/************
This function prints all of the drivers, and their results from each race in the selected year (Ji Hyun)
inputs: year  
outputs: list of all drivers, with their podium stats and points. 
*************/ 

void displayAllDrivers(driverList *list){

}

/************
This function displays the driver with the most points for the selected year (Darren)
inputs: year  
outputs: the world champion driver with a photo
*************/ 

void calculateWorldChampion(){

}

/************
This function prints all teams, and their results in the selected year. (Aiden)
inputs: year 
outputs: list of the teams of that particular year, with their constructors points. 
*************/ 

void displayAllTeams(){

}

/************
This function displays the team with the most points for the selected year (Alexia)
inputs: year  
outputs: the world champion team, with a photo
*************/ 

void calculateConstructorsChampion(){

}

int main() {
    racesList list;
    printMenu(&list);
}

