#include <stido.h>
#include <curl/curl.h>
#include <stdlib.h>
#include <string.h>

#define MAX_DRIVER_SIZE 20;

char dbFileName[] = "dataBase";

void fetchDataFromAPI(const char *url) {
    CURL *curl;
    CURLcode res;

    curl = curl_easy_init();
    if(curl) {
        curl_easy_setopt(curl, CURLOPT_URL, url);
        res = curl_easy_perform(curl);

        if(res != CURLE_OK)
            fprintf(stderr, "curl_easy_perform() failed: %s\n", curl_easy_strerror(res));

        curl_easy_cleanup(curl);
    }
}

int main() {
    const char *url = "http://ergast.com/api/f1/drivers.json?callback=myParser";
    fetchDataFromAPI(url);
    return 0;
}

typedef struct driver{
    char firstName[10];
    char lastName[10]; 
    int points; 
    char number[2];
    char team[10];
    int age; 
} driver_t; 

typedef struct {
    driver_t driverList[MAX_DRIVER_SIZE]; 
    int number_of_drivers; 
}driverList;

typedef struct race{
    char date[8];
    char location[15];
    char raceNumber[10];
    int numberOfLaps; 
    char P1[10];
    char P2[10];
    char P3[10]; 

} race_t; 

typedef struct {
    race_t racesList[MAX_SEASON_SIZE]; 
    int number_of_races; 
}racesList;





/************
This function prints the user menu (Alexia)
inputs: none 
outputs: none
*************/ 

void printMenu(void){
    printf("Welcome to the F1 race results finder\n"); 
    
}

/************
This function gets the total list of races (Ji Hyun)
inputs: from data  
outputs: list of all races over the period  
*************/ 

void displayAllResults(racesList *list){

}


/************
This function adds to the total list of races (Darren)
inputs: race structs from user   
outputs: none   
*************/ 

void addRaceResults(racesList *list){

}

/************
This function removes the last race from total list of races (Aiden)
inputs: race structs from user   
outputs: none   
*************/ 

void removeRaceResults(racesList *list){

}


/************
This function saves the race results to the database (Alexia)
inputs: race list from user   
outputs: none   
*************/ 

void saveRaceResultstoDatabase(racesList *list, const char *filename){

}



/************
This function prints all of the drivers, and their results from each race in the selected year (Ji Hyun)
inputs: year  
outputs: list of all drivers, with their podium stats and points. 
*************/ 

void displayAllDrivers(driverList *list){
    
}

/************
This function displays the driver with the most points for the selected year (Darren)
inputs: year  
outputs: the world champion driver with a photo
*************/ 

void calculateWorldChampion(){

}

/************
This function prints all teams, and their results in the selected year. (Aiden)
inputs: year 
outputs: list of the teams of that particular year, with their constructors points. 
*************/ 

void displayAllTeams(){

}

/************
This function displays the team with the most points for the selected year (Alexia)
inputs: year  
outputs: the world champion team, with a photo
*************/ 

void calculateConstructorsChampion(){

}
